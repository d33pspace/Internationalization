@using System.Collections.Generic
@using System.Threading.Tasks
@using Internationalization.Services
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.AspNetCore.Mvc.Rendering

@inject IViewLocalizer Localizer
@inject ICurrencyService CurrencyService

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var current = CurrencyService.GetCurrent(requestCulture.RequestCulture.Culture);
    var availableCurrencies = CurrencyService
        .GetAll()
        .Select(c => new SelectListItem
        {
            Value = c.CultureName,
            Text = c.Symbol
        });
}
<li class="dropdown">
    <a href="#" class="dropdown-toggle" data-toggle="dropdown">
        Currency (@CurrencyService.GetSymbol(current))
        <span class="caret"></span>
    </a>
    <ul class="dropdown-menu lang-selector">
        @foreach (var currency in availableCurrencies)
        {
            if (currency.Value == CurrencyService.GetSymbol(current))
            {
                <li><a href="#" data-value="@currency.Value">@currency.Text <span class="glyphicon glyphicon-ok" aria-hidden="true"></span></a></li>
            }
            else
            {
                <li><a href="#" data-value="@currency.Value">@currency.Text</a></li>
            }
        }
    </ul>
    <form asp-controller="Localization" asp-action="SetCurrency" asp-route-returnUrl="@Context.Request.Path"
                method="post" id="lang-form" role="form">
        <input type="hidden" name="culture" value="@requestCulture.RequestCulture.UICulture.Name" />
    </form>
</li>
